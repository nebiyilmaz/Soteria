<?php
include 'config.php';




/* 
    SAST Issue EPIC Link - SB-241
*/
//$JiraURL="https://divido.atlassian.net/rest/agile/1.0/epic/20083/issue?maxResults=1500";
$JiraSearchURL='https://divido.atlassian.net/rest/api/2/search';





/* 
    If API token fails, this is a workaround for session. It can be obtained from jira web session from developer tools. 
    It should be set via "curl_setopt()" as follows.
    $JiraCloudToken="cloud.session.token=";
    curl_setopt($ch, CURLOPT_COOKIE, $JiraCloudToken );
*/

/*
if (!isset($argv[1])){
    echo("Parameter required...\n");
    exit(1);
}
*/





$JiraHeader = array("Content-Type: application/json", "Authorization: Basic $JiraApiToken");






function GetPentestIssueCounts($JiraTicketNumber, $Severity){

    global $JiraSearchURL;
    global $JiraHeader;
    


    switch ($Severity){
        case "T":
            $JiraJQL = array(
                'jql' => '"Epic Link"='.$JiraTicketNumber.''
            );
        break;

        case "C": 
            $JiraJQL = array(
                'jql' => '"Epic Link"='.$JiraTicketNumber.' and priority in(Highest) '
            );
            break;

        case "H":         
            $JiraJQL = array(
                'jql' => '"Epic Link"='.$JiraTicketNumber.' and priority in(High) '
            );
            break;

        case "M":         
            $JiraJQL = array(
                'jql' => '"Epic Link"='.$JiraTicketNumber.' and priority in(Medium) '
            );
            break;

        case "L": 
            $JiraJQL = array(
                'jql' => '"Epic Link"='.$JiraTicketNumber.' and priority in(Low) '
            );
            break;

        case "I":         
            $JiraJQL = array(
                'jql' => '"Epic Link"='.$JiraTicketNumber.' and priority in(Lowest) '
            );
            break;

    }  

    $ch = curl_init($JiraSearchURL);

    //curl_setopt($ch, CURLOPT_PROXY, '127.0.0.1:8080');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_HTTPHEADER, $JiraHeader);
    curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($JiraJQL));

 

    $JiraResponse = curl_exec($ch);
    curl_close($ch);


    $Issues = (array)json_decode($JiraResponse);
 

    return $Issues['total'];
}

/*
$TotalIssuesCount = GetPentestIssueCounts($JiraTicketNumber, "T");
$CriticalIssuesCount = GetPentestIssueCounts($JiraTicketNumber, "C");
$HighIssuesCount = GetPentestIssueCounts($JiraTicketNumber, "H");
$MediumIssuesCount = GetPentestIssueCounts($JiraTicketNumber, "M");
$LowIssuesCount = GetPentestIssueCounts($JiraTicketNumber, "L");
$InfoIssuesCount = GetPentestIssueCounts($JiraTicketNumber, "I");

$SastIssuesBySeverityAll = array(
    array("label" => "Critical", "y" => $CriticalIssuesCount),
    array("label" => "High", "y" => $HighIssuesCount),
    array("label" => "Medium", "y" => $MediumIssuesCount),
    array("label" => "Low", "y" => $LowIssuesCount),
    array("label" => "Info", "y" => $InfoIssuesCount)
);

print_r(json_encode($SastIssuesBySeverityAll, JSON_PRETTY_PRINT));
echo "\n";
echo "$TotalIssuesCount\n";

//$file = fopen("json/SastIssuesBySeverityAll.json","w");
//fwrite($file, json_encode($SastIssuesBySeverityAll, JSON_PRETTY_PRINT));
//fclose($file);


*/



?>